{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIRUBAKARAN\\\\OneDrive\\\\Documents\\\\Internship\\\\client\\\\src\\\\component\\\\alldoctor\\\\alldoctor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport Editdoctor from './Editdoctor'; // Adjust the import path as needed\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AllDoctor = () => {\n  _s();\n  const [doctors, setDoctors] = useState([]);\n  const [selectedDoctor, setSelectedDoctor] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  useEffect(() => {\n    axios.get('http://localhost:8800/api/doctor/getdoctor') // Replace with your API endpoint\n    .then(response => {\n      setDoctors(response.data);\n    }).catch(error => {\n      console.error('Error fetching doctors:', error);\n    });\n  }, []);\n  const handleEditClick = doctor => {\n    setSelectedDoctor(doctor);\n    setShowModal(true);\n  };\n  const handleCloseModal = () => {\n    setShowModal(false);\n    setSelectedDoctor(null);\n  };\n  const handleSave = updatedDoctor => {\n    setDoctors(doctors.map(doc => doc._id === updatedDoctor._id ? updatedDoctor : doc));\n    handleCloseModal();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tableplacement\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        size: \"sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date of Birth\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: doctors.map((doctor, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: doctor.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: new Date(doctor.dateofbirth).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: doctor.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: doctor.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: doctor.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-center\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-success\",\n                onClick: () => handleEditClick(doctor),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this)]\n          }, doctor._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Editdoctor, {\n      show: showModal,\n      onHide: handleCloseModal,\n      doctor: selectedDoctor,\n      onSave: handleSave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(AllDoctor, \"JU6lhcg68xnc9jYeR5ZRuCHi120=\");\n_c = AllDoctor;\nexport default AllDoctor;\nvar _c;\n$RefreshReg$(_c, \"AllDoctor\");","map":{"version":3,"names":["React","useEffect","useState","axios","Table","Button","Editdoctor","jsxDEV","_jsxDEV","Fragment","_Fragment","AllDoctor","_s","doctors","setDoctors","selectedDoctor","setSelectedDoctor","showModal","setShowModal","get","then","response","data","catch","error","console","handleEditClick","doctor","handleCloseModal","handleSave","updatedDoctor","map","doc","_id","children","className","striped","bordered","hover","size","fileName","_jsxFileName","lineNumber","columnNumber","index","username","Date","dateofbirth","toLocaleDateString","email","phone","category","variant","onClick","show","onHide","onSave","_c","$RefreshReg$"],"sources":["C:/Users/KIRUBAKARAN/OneDrive/Documents/Internship/client/src/component/alldoctor/alldoctor.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Editdoctor from './Editdoctor'; // Adjust the import path as needed\r\n\r\nconst AllDoctor = () => {\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [selectedDoctor, setSelectedDoctor] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:8800/api/doctor/getdoctor') // Replace with your API endpoint\r\n      .then(response => {\r\n        setDoctors(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching doctors:', error);\r\n      });\r\n  }, []);\r\n\r\n  const handleEditClick = (doctor) => {\r\n    setSelectedDoctor(doctor);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setShowModal(false);\r\n    setSelectedDoctor(null);\r\n  };\r\n\r\n  const handleSave = (updatedDoctor) => {\r\n    setDoctors(doctors.map(doc => (doc._id === updatedDoctor._id ? updatedDoctor : doc)));\r\n    handleCloseModal();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"tableplacement\">\r\n        <Table striped bordered hover size=\"sm\">\r\n          <thead>\r\n            <tr className=\"text-center\">\r\n              <th>No</th>\r\n              <th>Username</th>\r\n              <th>Date of Birth</th>\r\n              <th>Email</th>\r\n              <th>Phone</th>\r\n              <th>Category</th>\r\n              <th>Edit</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {doctors.map((doctor, index) => (\r\n              <tr key={doctor._id}>\r\n                <td>{index + 1}</td>\r\n                <td>{doctor.username}</td>\r\n                <td>{new Date(doctor.dateofbirth).toLocaleDateString()}</td>\r\n                <td>{doctor.email}</td>\r\n                <td>{doctor.phone}</td>\r\n                <td>{doctor.category}</td>\r\n                <td className=\"text-center\">\r\n                  <Button variant=\"outline-success\" onClick={() => handleEditClick(doctor)}>Edit</Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n      <Editdoctor\r\n        show={showModal}\r\n        onHide={handleCloseModal}\r\n        doctor={selectedDoctor}\r\n        onSave={handleSave}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllDoctor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}