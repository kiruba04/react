{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIRUBAKARAN\\\\OneDrive\\\\Documents\\\\Internship\\\\client\\\\src\\\\component\\\\alldoctor\\\\Editdoctor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\nimport axios from 'axios';\nimport \"../navbar/navBar.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AddDoctor({\n  show,\n  onHide,\n  doctor,\n  onSave\n}) {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [dateOfBirth, setDateOfBirth] = useState('');\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [category, setCategory] = useState('');\n  const [availability, setAvailability] = useState({\n    Monday: {\n      available: false,\n      startTime: '',\n      endTime: '',\n      token: ''\n    },\n    Tuesday: {\n      available: false,\n      startTime: '',\n      endTime: '',\n      token: ''\n    },\n    Wednesday: {\n      available: false,\n      startTime: '',\n      endTime: '',\n      token: ''\n    },\n    Thursday: {\n      available: false,\n      startTime: '',\n      endTime: '',\n      token: ''\n    },\n    Friday: {\n      available: false,\n      startTime: '',\n      endTime: '',\n      token: ''\n    },\n    Saturday: {\n      available: false,\n      startTime: '',\n      endTime: '',\n      token: ''\n    },\n    Sunday: {\n      available: false,\n      startTime: '',\n      endTime: '',\n      token: ''\n    }\n  });\n  const [error, setError] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  useEffect(() => {\n    if (doctor) {\n      setUsername(doctor.username);\n      setDateOfBirth(doctor.dateofbirth);\n      setEmail(doctor.email);\n      setPhone(doctor.phone);\n      setCategory(doctor.category);\n      setAvailability(doctor.availableAppointments.reduce((acc, appointment) => {\n        acc[appointment.Day] = {\n          available: appointment.available,\n          startTime: appointment.startTime,\n          endTime: appointment.endTime,\n          token: appointment.availaableslots\n        };\n        return acc;\n      }, {}));\n    } else {\n      resetForm();\n    }\n  }, [doctor]);\n  const resetForm = () => {\n    setUsername('');\n    setPassword('');\n    setDateOfBirth('');\n    setEmail('');\n    setPhone('');\n    setCategory('');\n    setAvailability({\n      Monday: {\n        available: false,\n        startTime: '',\n        endTime: '',\n        token: ''\n      },\n      Tuesday: {\n        available: false,\n        startTime: '',\n        endTime: '',\n        token: ''\n      },\n      Wednesday: {\n        available: false,\n        startTime: '',\n        endTime: '',\n        token: ''\n      },\n      Thursday: {\n        available: false,\n        startTime: '',\n        endTime: '',\n        token: ''\n      },\n      Friday: {\n        available: false,\n        startTime: '',\n        endTime: '',\n        token: ''\n      },\n      Saturday: {\n        available: false,\n        startTime: '',\n        endTime: '',\n        token: ''\n      },\n      Sunday: {\n        available: false,\n        startTime: '',\n        endTime: '',\n        token: ''\n      }\n    });\n    setError('');\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const updatedDoctor = {\n      _id: doctor._id,\n      username: username,\n      password: password,\n      dateofbirth: dateOfBirth,\n      email: email,\n      phone: phone,\n      category: category,\n      availableAppointments: Object.entries(availability).map(([day, details]) => ({\n        Day: day,\n        available: details.available,\n        startTime: details.startTime,\n        endTime: details.endTime,\n        availaableslots: details.token\n      }))\n    };\n    try {\n      const response = await axios.put(`http://localhost:8800/api/doctor/update-doctor/${doctor._id}`, updatedDoctor, {\n        withCredentials: true\n      });\n      console.log(response.data);\n      onSave(response.data);\n    } catch (error) {\n      if (error.response && error.response.status === 400 && error.response.data === 'Email already exists') {\n        setError('Email is already registered. Please use a different email.');\n      } else {\n        setError('Update failed. Please try again.');\n      }\n    }\n  };\n  const toggleShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n  const handleAvailabilityChange = (day, field, value) => {\n    setAvailability(prev => ({\n      ...prev,\n      [day]: {\n        ...prev[day],\n        [field]: value\n      }\n    }));\n  };\n  const renderAvailabilityFields = day => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: day\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n        type: \"checkbox\",\n        label: \"Available\",\n        checked: availability[day].available,\n        onChange: e => handleAvailabilityChange(day, 'available', e.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), availability[day].available && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Start Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"time\",\n          value: availability[day].startTime,\n          onChange: e => handleAvailabilityChange(day, 'startTime', e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"End Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"time\",\n          value: availability[day].endTime,\n          onChange: e => handleAvailabilityChange(day, 'endTime', e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Available Slots\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"number\",\n          value: availability[day].token,\n          onChange: e => handleAvailabilityChange(day, 'token', e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)\n  }, day, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"custom-modal\",\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: onHide,\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      scrollable: true,\n      className: \"custom-modal-content\",\n      dialogClassName: \"custom-modal-dialog\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        className: \"custom-modal-header\",\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"contained-modal-title-vcenter\",\n          className: \"text-center w-100\",\n          children: doctor ? 'Edit Doctor' : 'Register Doctor'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        className: \"custom-modal-body\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"danger\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"username\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter username\",\n              value: username,\n              onChange: e => setUsername(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), !doctor && /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"password-field\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                type: showPassword ? \"text\" : \"password\",\n                placeholder: \"Enter password\",\n                value: password,\n                onChange: e => setPassword(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-secondary\",\n                onClick: toggleShowPassword,\n                children: showPassword ? \"Hide\" : \"Show\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"dateOfBirth\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Date of Birth\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"date\",\n              value: dateOfBirth,\n              onChange: e => setDateOfBirth(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              placeholder: \"Enter email\",\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"phone\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Phone Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"tel\",\n              placeholder: \"Enter phone number\",\n              value: phone,\n              onChange: e => setPhone(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"category\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Specialization\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              value: category,\n              onChange: e => setCategory(e.target.value),\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select specialization...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Skincare\",\n                children: \"Skin care\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Bone care\",\n                children: \"Bone care\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Child care\",\n                children: \"Child care\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Available Appointments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this), Object.keys(availability).map(day => renderAvailabilityFields(day))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"success\",\n              type: \"submit\",\n              children: doctor ? 'Update' : 'Save'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n}\n_s(AddDoctor, \"dq+gW9KpZTJdyMVS8YnANbbrglU=\");\n_c = AddDoctor;\nexport default AddDoctor;\nvar _c;\n$RefreshReg$(_c, \"AddDoctor\");","map":{"version":3,"names":["React","useState","useEffect","Modal","Form","Button","Alert","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","AddDoctor","show","onHide","doctor","onSave","_s","username","setUsername","password","setPassword","dateOfBirth","setDateOfBirth","email","setEmail","phone","setPhone","category","setCategory","availability","setAvailability","Monday","available","startTime","endTime","token","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","error","setError","showPassword","setShowPassword","dateofbirth","availableAppointments","reduce","acc","appointment","Day","availaableslots","resetForm","handleSubmit","event","preventDefault","updatedDoctor","_id","Object","entries","map","day","details","response","put","withCredentials","console","log","data","status","toggleShowPassword","handleAvailabilityChange","field","value","prev","renderAvailabilityFields","children","Group","className","Label","fileName","_jsxFileName","lineNumber","columnNumber","Check","type","label","checked","onChange","e","target","Control","required","size","centered","scrollable","dialogClassName","Header","closeButton","Title","id","Body","onSubmit","variant","controlId","placeholder","onClick","as","keys","_c","$RefreshReg$"],"sources":["C:/Users/KIRUBAKARAN/OneDrive/Documents/Internship/client/src/component/alldoctor/Editdoctor.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport axios from 'axios';\r\nimport \"../navbar/navBar.css\";\r\n\r\nfunction AddDoctor({ show, onHide, doctor, onSave }) {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [dateOfBirth, setDateOfBirth] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [availability, setAvailability] = useState({\r\n    Monday: { available: false, startTime: '', endTime: '', token: '' },\r\n    Tuesday: { available: false, startTime: '', endTime: '', token: '' },\r\n    Wednesday: { available: false, startTime: '', endTime: '', token: '' },\r\n    Thursday: { available: false, startTime: '', endTime: '', token: '' },\r\n    Friday: { available: false, startTime: '', endTime: '', token: '' },\r\n    Saturday: { available: false, startTime: '', endTime: '', token: '' },\r\n    Sunday: { available: false, startTime: '', endTime: '', token: '' },\r\n  });\r\n\r\n  const [error, setError] = useState('');\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (doctor) {\r\n      setUsername(doctor.username);\r\n      setDateOfBirth(doctor.dateofbirth);\r\n      setEmail(doctor.email);\r\n      setPhone(doctor.phone);\r\n      setCategory(doctor.category);\r\n      setAvailability(doctor.availableAppointments.reduce((acc, appointment) => {\r\n        acc[appointment.Day] = {\r\n          available: appointment.available,\r\n          startTime: appointment.startTime,\r\n          endTime: appointment.endTime,\r\n          token: appointment.availaableslots\r\n        };\r\n        return acc;\r\n      }, {}));\r\n    } else {\r\n      resetForm();\r\n    }\r\n  }, [doctor]);\r\n\r\n  const resetForm = () => {\r\n    setUsername('');\r\n    setPassword('');\r\n    setDateOfBirth('');\r\n    setEmail('');\r\n    setPhone('');\r\n    setCategory('');\r\n    setAvailability({\r\n      Monday: { available: false, startTime: '', endTime: '', token: '' },\r\n      Tuesday: { available: false, startTime: '', endTime: '', token: '' },\r\n      Wednesday: { available: false, startTime: '', endTime: '', token: '' },\r\n      Thursday: { available: false, startTime: '', endTime: '', token: '' },\r\n      Friday: { available: false, startTime: '', endTime: '', token: '' },\r\n      Saturday: { available: false, startTime: '', endTime: '', token: '' },\r\n      Sunday: { available: false, startTime: '', endTime: '', token: '' },\r\n    });\r\n    setError('');\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const updatedDoctor = {\r\n      _id: doctor._id,\r\n      username: username,\r\n      password: password,\r\n      dateofbirth: dateOfBirth,\r\n      email: email,\r\n      phone: phone,\r\n      category: category,\r\n      availableAppointments: Object.entries(availability).map(([day, details]) => ({\r\n        Day: day,\r\n        available: details.available,\r\n        startTime: details.startTime,\r\n        endTime: details.endTime,\r\n        availaableslots: details.token,\r\n      })),\r\n    };\r\n\r\n    try {\r\n      const response = await axios.put(`http://localhost:8800/api/doctor/update-doctor/${doctor._id}`, updatedDoctor, {\r\n        withCredentials: true\r\n      });\r\n      console.log(response.data);\r\n      onSave(response.data);\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 400 && error.response.data === 'Email already exists') {\r\n        setError('Email is already registered. Please use a different email.');\r\n      } else {\r\n        setError('Update failed. Please try again.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const toggleShowPassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const handleAvailabilityChange = (day, field, value) => {\r\n    setAvailability(prev => ({\r\n      ...prev,\r\n      [day]: {\r\n        ...prev[day],\r\n        [field]: value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const renderAvailabilityFields = (day) => (\r\n    <div key={day}>\r\n      <Form.Group className=\"mb-3\">\r\n        <Form.Label>{day}</Form.Label>\r\n        <Form.Check\r\n          type=\"checkbox\"\r\n          label=\"Available\"\r\n          checked={availability[day].available}\r\n          onChange={(e) => handleAvailabilityChange(day, 'available', e.target.checked)}\r\n        />\r\n        {availability[day].available && (\r\n          <>\r\n            <Form.Label>Start Time</Form.Label>\r\n            <Form.Control\r\n              type=\"time\"\r\n              value={availability[day].startTime}\r\n              onChange={(e) => handleAvailabilityChange(day, 'startTime', e.target.value)}\r\n              required\r\n            />\r\n            <Form.Label>End Time</Form.Label>\r\n            <Form.Control\r\n              type=\"time\"\r\n              value={availability[day].endTime}\r\n              onChange={(e) => handleAvailabilityChange(day, 'endTime', e.target.value)}\r\n              required\r\n            />\r\n            <Form.Label>Available Slots</Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              value={availability[day].token}\r\n              onChange={(e) => handleAvailabilityChange(day, 'token', e.target.value)}\r\n              required\r\n            />\r\n          </>\r\n        )}\r\n      </Form.Group>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className='custom-modal'>\r\n      <Modal\r\n        show={show}\r\n        onHide={onHide}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        scrollable\r\n        className=\"custom-modal-content\"\r\n        dialogClassName=\"custom-modal-dialog\"\r\n      >\r\n        <Modal.Header closeButton className=\"custom-modal-header\">\r\n          <Modal.Title id=\"contained-modal-title-vcenter\" className=\"text-center w-100\">\r\n            {doctor ? 'Edit Doctor' : 'Register Doctor'}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"custom-modal-body\">\r\n          <Form onSubmit={handleSubmit}>\r\n            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n            <Form.Group className=\"mb-3\" controlId=\"username\">\r\n              <Form.Label>Username</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter username\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n                required\r\n              />\r\n            </Form.Group>\r\n\r\n            {!doctor && (\r\n              <Form.Group className=\"mb-3\" controlId=\"password\">\r\n                <Form.Label>Password</Form.Label>\r\n                <div className=\"password-field\">\r\n                  <Form.Control\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    placeholder=\"Enter password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    required\r\n                  />\r\n                  <Button variant=\"outline-secondary\" onClick={toggleShowPassword}>\r\n                    {showPassword ? \"Hide\" : \"Show\"}\r\n                  </Button>\r\n                </div>\r\n              </Form.Group>\r\n            )}\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"dateOfBirth\">\r\n              <Form.Label>Date of Birth</Form.Label>\r\n              <Form.Control\r\n                type=\"date\"\r\n                value={dateOfBirth}\r\n                onChange={(e) => setDateOfBirth(e.target.value)}\r\n                required\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"email\">\r\n              <Form.Label>Email address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                required\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"phone\">\r\n              <Form.Label>Phone Number</Form.Label>\r\n              <Form.Control\r\n                type=\"tel\"\r\n                placeholder=\"Enter phone number\"\r\n                value={phone}\r\n                onChange={(e) => setPhone(e.target.value)}\r\n                required\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"category\">\r\n              <Form.Label>Specialization</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\">Select specialization...</option>\r\n                <option value=\"Skincare\">Skin care</option>\r\n                <option value=\"Bone care\">Bone care</option>\r\n                <option value=\"Child care\">Child care</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Available Appointments</Form.Label>\r\n              {Object.keys(availability).map(day => renderAvailabilityFields(day))}\r\n            </Form.Group>\r\n\r\n            <div className=\"text-center\">\r\n              <Button variant=\"success\" type=\"submit\">\r\n                {doctor ? 'Update' : 'Save'}\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddDoctor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}