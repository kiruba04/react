{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIRUBAKARAN\\\\OneDrive\\\\Documents\\\\Internship\\\\client\\\\src\\\\component\\\\category\\\\AppointmentForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AppointmentForm({\n  doctorId,\n  onHide\n}) {\n  _s();\n  const [date, setDate] = useState('');\n  const [time, setTime] = useState('');\n  const [doctorinfo, setDoctorinfo] = useState({});\n  const [selectedDay, setSelectedDay] = useState('');\n  const [availableDays, setAvailableDays] = useState([]);\n  useEffect(() => {\n    // Fetch available appointments for the selected doctor\n    axios.get(`http://localhost:8800/api/doctor/info/${doctorId}`).then(response => {\n      setDoctorinfo(response.data);\n      const startDay = response.data.startDay;\n      const endDay = response.data.endDay;\n      const startTime = response.data.startTime;\n      const endTime = response.data.endTime;\n      setTime(`${response.data.startTime}-${response.data.endTime}`);\n      generateAvailableDays(startDay, endDay, startTime, endTime);\n    }).catch(error => console.error(error));\n  }, [doctorId]);\n  const generateAvailableDays = (startDay, endDay, startTime, endTime) => {\n    const availableDates = [];\n    const today = new Date();\n    let currentDate = new Date(today);\n\n    // Iterate over two weeks of days\n    for (let i = 0; i < 14; i++) {\n      const dayOfWeek = currentDate.toLocaleDateString('en-US', {\n        weekday: 'long'\n      });\n      const formattedDate = currentDate.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit'\n      });\n      if (dayOfWeek.toLowerCase() >= startDay.toLowerCase() && dayOfWeek.toLowerCase() <= endDay.toLowerCase()) {\n        availableDates.push({\n          date: formattedDate,\n          dayOfWeek: dayOfWeek\n        });\n      }\n      currentDate.setDate(currentDate.getDate() + 1);\n    }\n    setAvailableDays(availableDates);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const storedUser = JSON.parse(localStorage.getItem('user'));\n    const userId = storedUser._id;\n    if (!userId) {\n      console.error(\"User ID not found in local storage\");\n      return;\n    }\n    const newAppointment = {\n      userid: userId,\n      doctorid: doctorId,\n      date: selectedDay.date,\n      day: selectedDay.dayOfWeek\n    };\n    try {\n      const response = await axios.post('http://localhost:8800/api/appointments', newAppointment);\n      console.log(response.data);\n      onHide();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"date\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Select Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"select\",\n        value: selectedDay,\n        onChange: e => setSelectedDay(JSON.parse(e.target.value)),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select an available day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), availableDays.map((day, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: JSON.stringify(day),\n          children: [day.dayOfWeek, \" - \", day.date]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"time\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Available Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        value: time,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-success\",\n        type: \"submit\",\n        children: \"Book Appointment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(AppointmentForm, \"WlAb0E1xeMFkQ8/a3fOY+eCXFAI=\");\n_c = AppointmentForm;\nexport default AppointmentForm;\nvar _c;\n$RefreshReg$(_c, \"AppointmentForm\");","map":{"version":3,"names":["React","useState","useEffect","Form","Button","axios","jsxDEV","_jsxDEV","AppointmentForm","doctorId","onHide","_s","date","setDate","time","setTime","doctorinfo","setDoctorinfo","selectedDay","setSelectedDay","availableDays","setAvailableDays","get","then","response","data","startDay","endDay","startTime","endTime","generateAvailableDays","catch","error","console","availableDates","today","Date","currentDate","i","dayOfWeek","toLocaleDateString","weekday","formattedDate","year","month","day","toLowerCase","push","getDate","handleSubmit","event","preventDefault","storedUser","JSON","parse","localStorage","getItem","userId","_id","newAppointment","userid","doctorid","post","log","onSubmit","children","Group","className","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","as","value","onChange","e","target","required","map","index","stringify","type","readOnly","variant","_c","$RefreshReg$"],"sources":["C:/Users/KIRUBAKARAN/OneDrive/Documents/Internship/client/src/component/category/AppointmentForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from 'axios';\r\n\r\nfunction AppointmentForm({ doctorId, onHide }) {\r\n  const [date, setDate] = useState('');\r\n  const [time, setTime] = useState('');\r\n  const [doctorinfo, setDoctorinfo] = useState({});\r\n  const [selectedDay, setSelectedDay] = useState('');\r\n  const [availableDays, setAvailableDays] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch available appointments for the selected doctor\r\n    axios.get(`http://localhost:8800/api/doctor/info/${doctorId}`)\r\n      .then(response => {\r\n        setDoctorinfo(response.data);\r\n        const startDay = response.data.startDay;\r\n        const endDay = response.data.endDay;\r\n        const startTime = response.data.startTime;\r\n        const endTime = response.data.endTime;\r\n        setTime(`${response.data.startTime}-${response.data.endTime}`)\r\n        generateAvailableDays(startDay, endDay, startTime, endTime);\r\n      })\r\n      .catch(error => console.error(error));\r\n  }, [doctorId]);\r\n\r\n  const generateAvailableDays = (startDay, endDay, startTime, endTime) => {\r\n    const availableDates = [];\r\n    const today = new Date();\r\n    let currentDate = new Date(today);\r\n\r\n    // Iterate over two weeks of days\r\n    for (let i = 0; i < 14; i++) {\r\n      const dayOfWeek = currentDate.toLocaleDateString('en-US', { weekday: 'long' });\r\n      const formattedDate = currentDate.toLocaleDateString('en-US', { year: 'numeric', month: '2-digit', day: '2-digit' });\r\n      if (dayOfWeek.toLowerCase() >= startDay.toLowerCase() && dayOfWeek.toLowerCase() <= endDay.toLowerCase()) {\r\n        availableDates.push({ date: formattedDate, dayOfWeek: dayOfWeek });\r\n      }\r\n      currentDate.setDate(currentDate.getDate() + 1);\r\n    }\r\n\r\n    setAvailableDays(availableDates);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const storedUser = JSON.parse(localStorage.getItem('user'));\r\n    const userId = storedUser._id\r\n    if (!userId) {\r\n      console.error(\"User ID not found in local storage\");\r\n      return;\r\n    }\r\n\r\n    const newAppointment = {\r\n      userid: userId,\r\n      doctorid: doctorId,\r\n      date: selectedDay.date,\r\n      day: selectedDay.dayOfWeek\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:8800/api/appointments', newAppointment);\r\n      console.log(response.data);\r\n      onHide();\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Form.Group className=\"mb-3\" controlId=\"date\">\r\n        <Form.Label>Select Date</Form.Label>\r\n        <Form.Control\r\n          as=\"select\"\r\n          value={selectedDay}\r\n          onChange={(e) => setSelectedDay(JSON.parse(e.target.value))}\r\n          required\r\n        >\r\n          <option value=\"\">Select an available day</option>\r\n          {availableDays.map((day, index) => (\r\n            <option key={index} value={JSON.stringify(day)}>\r\n              {day.dayOfWeek} - {day.date}\r\n            </option>\r\n          ))}\r\n        </Form.Control>\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-3\" controlId=\"time\">\r\n        <Form.Label>Available Time</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          value={time}\r\n          readOnly\r\n        />\r\n      </Form.Group>\r\n\r\n      <div className=\"text-center\">\r\n        <Button variant=\"outline-success\" type=\"submit\">Book Appointment</Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default AppointmentForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}