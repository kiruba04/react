{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIRUBAKARAN\\\\OneDrive\\\\Documents\\\\Internship\\\\client\\\\src\\\\component\\\\category\\\\AppointmentForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AppointmentForm({\n  doctorId,\n  onHide\n}) {\n  _s();\n  const [date, setDate] = useState('');\n  const [time, setTime] = useState('');\n  const [doctorinfo, setDoctorinfo] = useState([]);\n  const [days, setDays] = useState([]);\n  const [selectedDay, setSelectedDay] = useState('');\n  useEffect(() => {\n    // Fetch available appointments for the selected doctor\n    axios.get(`http://localhost:8800/api/doctor/info/${doctorId}`).then(response => {\n      setDoctorinfo(response.data);\n      const startDate = new Date();\n      startDate.setDate(startDate.getDate() + (startDate.getDay() >= response.data.startDay ? 7 - startDate.getDay() + response.data.startDay : response.data.startDay - startDate.getDay()));\n      const endDate = new Date(startDate);\n      endDate.setDate(startDate.getDate() + 14);\n      const daysArray = [];\n      let currentDate = startDate;\n      while (currentDate <= endDate) {\n        daysArray.push(new Date(currentDate));\n        currentDate.setDate(currentDate.getDate() + 1);\n      }\n      setDays(daysArray.filter(day => day.getDay() >= doctorinfo.startDay && day.getDay() <= doctorinfo.endDay));\n      setTime(`${doctorinfo.startTime}-${doctorinfo.endTime}`);\n    }).catch(error => console.error(error));\n  }, [doctorId]);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const storedUser = JSON.parse(localStorage.getItem('user'));\n    const userId = storedUser._id;\n    if (!userId) {\n      console.error(\"User ID not found in local storage\");\n      return;\n    }\n    const newAppointment = {\n      userid: userId,\n      doctorid: doctorId,\n      date: selectedDay,\n      day: selectedDay.toLocaleString('en-US', {\n        weekday: 'long'\n      })\n    };\n    try {\n      const response = await axios.post('http://localhost:8800/api/appointments', newAppointment);\n      console.log(response.data);\n      onHide();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"day\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Days\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n        value: selectedDay,\n        onChange: e => setSelectedDay(e.target.value),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), days.map((day, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: day,\n          children: day.toLocaleDateString('en-US', {\n            weekday: 'long',\n            day: 'numeric',\n            month: 'long'\n          })\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"time\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Available Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        value: time,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-success\",\n        type: \"submit\",\n        children: \"Book Appointment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(AppointmentForm, \"SAozKr//pD4RktUB72re0uQ31hI=\");\n_c = AppointmentForm;\nexport default AppointmentForm;\nvar _c;\n$RefreshReg$(_c, \"AppointmentForm\");","map":{"version":3,"names":["React","useState","useEffect","Form","Button","axios","jsxDEV","_jsxDEV","AppointmentForm","doctorId","onHide","_s","date","setDate","time","setTime","doctorinfo","setDoctorinfo","days","setDays","selectedDay","setSelectedDay","get","then","response","data","startDate","Date","getDate","getDay","startDay","endDate","daysArray","currentDate","push","filter","day","endDay","startTime","endTime","catch","error","console","handleSubmit","event","preventDefault","storedUser","JSON","parse","localStorage","getItem","userId","_id","newAppointment","userid","doctorid","toLocaleString","weekday","post","log","onSubmit","children","Group","className","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","Select","value","onChange","e","target","required","map","index","toLocaleDateString","month","Control","type","readOnly","variant","_c","$RefreshReg$"],"sources":["C:/Users/KIRUBAKARAN/OneDrive/Documents/Internship/client/src/component/category/AppointmentForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from 'axios';\r\n\r\nfunction AppointmentForm({ doctorId, onHide }) {\r\n  const [date, setDate] = useState('');\r\n  const [time, setTime] = useState('');\r\n  const [doctorinfo, setDoctorinfo] = useState([]);\r\n  const [days, setDays] = useState([]);\r\n  const [selectedDay, setSelectedDay] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Fetch available appointments for the selected doctor\r\n    axios.get(`http://localhost:8800/api/doctor/info/${doctorId}`)\r\n      .then(response => {\r\n        setDoctorinfo(response.data);\r\n        const startDate = new Date();\r\n        startDate.setDate(startDate.getDate() + (startDate.getDay() >= response.data.startDay ? 7 - startDate.getDay() + response.data.startDay : response.data.startDay - startDate.getDay()));\r\n        const endDate = new Date(startDate);\r\n        endDate.setDate(startDate.getDate() + 14);\r\n        const daysArray = [];\r\n        let currentDate = startDate;\r\n        while (currentDate <= endDate) {\r\n          daysArray.push(new Date(currentDate));\r\n          currentDate.setDate(currentDate.getDate() + 1);\r\n        }\r\n        setDays(daysArray.filter(day => day.getDay() >= doctorinfo.startDay && day.getDay() <= doctorinfo.endDay));\r\n        setTime(`${doctorinfo.startTime}-${doctorinfo.endTime}`);\r\n      })\r\n      .catch(error => console.error(error));\r\n  }, [doctorId]);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const storedUser = JSON.parse(localStorage.getItem('user'));\r\n    const userId = storedUser._id\r\n    if (!userId) {\r\n      console.error(\"User ID not found in local storage\");\r\n      return;\r\n    }\r\n\r\n    const newAppointment = {\r\n      userid: userId,\r\n      doctorid: doctorId,\r\n      date: selectedDay,\r\n      day: selectedDay.toLocaleString('en-US', { weekday: 'long' })\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:8800/api/appointments', newAppointment);\r\n      console.log(response.data);\r\n      onHide();\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Form.Group className=\"mb-3\" controlId=\"day\">\r\n        <Form.Label>Days</Form.Label>\r\n        <Form.Select value={selectedDay} onChange={(e) => setSelectedDay(e.target.value)} required>\r\n          <option value=\"\">Select a day</option>\r\n          {days.map((day, index) => (\r\n            <option key={index} value={day}>{day.toLocaleDateString('en-US', { weekday: 'long', day: 'numeric', month: 'long' })}</option>\r\n          ))}\r\n        </Form.Select>\r\n      </Form.Group> \r\n      <Form.Group className=\"mb-3\" controlId=\"time\">\r\n        <Form.Label>Available Time</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          value={time}\r\n          readOnly\r\n        />\r\n      </Form.Group>\r\n\r\n      <div className=\"text-center\">\r\n        <Button variant=\"outline-success\" type=\"submit\">Book Appointment</Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default AppointmentForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}