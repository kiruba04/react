{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIRUBAKARAN\\\\OneDrive\\\\Documents\\\\Internship\\\\client\\\\src\\\\component\\\\category\\\\AppointmentForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AppointmentForm({\n  doctorId,\n  onHide\n}) {\n  _s();\n  const [date, setDate] = useState('');\n  const [time, setTime] = useState('');\n  const [doctorinfo, setDoctorinfo] = useState([]);\n  const [availableDays, setAvailableDays] = useState([]);\n  useEffect(() => {\n    // Fetch available appointments for the selected doctor\n    axios.get(`http://localhost:8800/api/doctor/info/${doctorId}`).then(response => {\n      setDoctorinfo(response.data);\n      setTime(`${response.data.startTime}-${response.data.endTime}`);\n      generateAvailableDays(response.data.startDay, response.data.endDay);\n    }).catch(error => console.error(error));\n  }, [doctorId]);\n  const generateAvailableDays = (startDay, endDay) => {\n    const daysOfWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    const startIndex = daysOfWeek.indexOf(startDay);\n    const endIndex = daysOfWeek.indexOf(endDay);\n    const availableDays = [];\n    for (let i = 0; i < 14; i++) {\n      const currentDay = new Date();\n      currentDay.setDate(currentDay.getDate() + i);\n      const dayName = daysOfWeek[currentDay.getDay()];\n      if (startIndex <= endIndex && currentDay.getDay() >= startIndex && currentDay.getDay() <= endIndex || startIndex > endIndex && (currentDay.getDay() >= startIndex || currentDay.getDay() <= endIndex)) {\n        availableDays.push(currentDay.toISOString().split('T')[0]);\n      }\n    }\n    setAvailableDays(availableDays);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const storedUser = JSON.parse(localStorage.getItem('user'));\n    const userId = storedUser._id;\n    if (!userId) {\n      console.error(\"User ID not found in local storage\");\n      return;\n    }\n    const newAppointment = {\n      userid: userId,\n      doctorid: doctorId,\n      date: date,\n      day: new Date(date).toLocaleString('en-US', {\n        weekday: 'long'\n      })\n    };\n    try {\n      const response = await axios.post('http://localhost:8800/api/appointments', newAppointment);\n      console.log(response.data);\n      onHide();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"date\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Select Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"select\",\n        value: date,\n        onChange: e => setDate(e.target.value),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), availableDays.map((day, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: day,\n          children: new Date(day).toLocaleDateString('en-US', {\n            weekday: 'long',\n            year: 'numeric',\n            month: 'long',\n            day: 'numeric'\n          })\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"time\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Available Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        value: time,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-success\",\n        type: \"submit\",\n        children: \"Book Appointment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(AppointmentForm, \"P2rrbnRYi2P5U+/Qs6Vpm7IhiNM=\");\n_c = AppointmentForm;\nexport default AppointmentForm;\nvar _c;\n$RefreshReg$(_c, \"AppointmentForm\");","map":{"version":3,"names":["React","useState","useEffect","Form","Button","axios","jsxDEV","_jsxDEV","AppointmentForm","doctorId","onHide","_s","date","setDate","time","setTime","doctorinfo","setDoctorinfo","availableDays","setAvailableDays","get","then","response","data","startTime","endTime","generateAvailableDays","startDay","endDay","catch","error","console","daysOfWeek","startIndex","indexOf","endIndex","i","currentDay","Date","getDate","dayName","getDay","push","toISOString","split","handleSubmit","event","preventDefault","storedUser","JSON","parse","localStorage","getItem","userId","_id","newAppointment","userid","doctorid","day","toLocaleString","weekday","post","log","onSubmit","children","Group","className","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","as","value","onChange","e","target","required","map","index","toLocaleDateString","year","month","type","readOnly","variant","_c","$RefreshReg$"],"sources":["C:/Users/KIRUBAKARAN/OneDrive/Documents/Internship/client/src/component/category/AppointmentForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from 'axios';\r\n\r\nfunction AppointmentForm({ doctorId, onHide }) {\r\n  const [date, setDate] = useState('');\r\n  const [time, setTime] = useState('');\r\n  const [doctorinfo, setDoctorinfo] = useState([]);\r\n  const [availableDays, setAvailableDays] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch available appointments for the selected doctor\r\n    axios.get(`http://localhost:8800/api/doctor/info/${doctorId}`)\r\n      .then(response => {\r\n        setDoctorinfo(response.data);\r\n        setTime(`${response.data.startTime}-${response.data.endTime}`);\r\n        generateAvailableDays(response.data.startDay, response.data.endDay);\r\n      })\r\n      .catch(error => console.error(error));\r\n  }, [doctorId]);\r\n\r\n  const generateAvailableDays = (startDay, endDay) => {\r\n    const daysOfWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n    const startIndex = daysOfWeek.indexOf(startDay);\r\n    const endIndex = daysOfWeek.indexOf(endDay);\r\n    const availableDays = [];\r\n\r\n    for (let i = 0; i < 14; i++) {\r\n      const currentDay = new Date();\r\n      currentDay.setDate(currentDay.getDate() + i);\r\n      const dayName = daysOfWeek[currentDay.getDay()];\r\n\r\n      if (\r\n        (startIndex <= endIndex && currentDay.getDay() >= startIndex && currentDay.getDay() <= endIndex) ||\r\n        (startIndex > endIndex && (currentDay.getDay() >= startIndex || currentDay.getDay() <= endIndex))\r\n      ) {\r\n        availableDays.push(currentDay.toISOString().split('T')[0]);\r\n      }\r\n    }\r\n\r\n    setAvailableDays(availableDays);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    \r\n    const storedUser = JSON.parse(localStorage.getItem('user'));\r\n    const userId = storedUser._id\r\n    if (!userId) {\r\n      console.error(\"User ID not found in local storage\");\r\n      return;\r\n    }\r\n\r\n    const newAppointment = {\r\n      userid: userId,\r\n      doctorid: doctorId,\r\n      date: date,\r\n      day: new Date(date).toLocaleString('en-US', { weekday: 'long' })\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:8800/api/appointments', newAppointment);\r\n      console.log(response.data);\r\n      onHide();\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Form.Group className=\"mb-3\" controlId=\"date\">\r\n        <Form.Label>Select Date</Form.Label>\r\n        <Form.Control\r\n          as=\"select\"\r\n          value={date}\r\n          onChange={(e) => setDate(e.target.value)}\r\n          required\r\n        >\r\n          <option value=\"\">Select a date</option>\r\n          {availableDays.map((day, index) => (\r\n            <option key={index} value={day}>\r\n              {new Date(day).toLocaleDateString('en-US', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' })}\r\n            </option>\r\n          ))}\r\n        </Form.Control>\r\n      </Form.Group> \r\n      <Form.Group className=\"mb-3\" controlId=\"time\">\r\n         <Form.Label>Available Time</Form.Label>\r\n         <Form.Control\r\n           type=\"text\"\r\n           value={time}\r\n           readOnly\r\n         />\r\n        </Form.Group>\r\n\r\n      <div className=\"text-center\">\r\n        <Button variant=\"outline-success\" type=\"submit\">Book Appointment</Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default AppointmentForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}